---
apiVersion: v1
kind: Namespace
metadata:
  name: db
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-configmap
  namespace: db
  labels:
    app: db
    app.kubernetes.io/name: mysql
data:
  primary.cnf: |
    [mysqld]
    log-bin
    server_id = 100
---
apiVersion: v1
data:
  MYSQL_ROOT_PASSWORD: cGFzc3dvcmQ=
kind: Secret
metadata:
  name: mysql-secret
  namespace: db
  labels:
    app: db
---
# Headless service for stable DNS entries of StatefulSet members.
apiVersion: v1
kind: Service
metadata:
  name: mysql-headless
  namespace: db
  labels:
    app: db
    app.kubernetes.io/name: mysql
spec:
  ports:
  - name: mysql
    port: 3306
  clusterIP: None
  selector:
    app: db
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: db
  labels:
    app: db
    app.kubernetes.io/name: mysql
spec:
  ports:
  - name: mysql
    port: 3306
  selector:
    app: db
---      
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  namespace: db
  labels:
    app: db
spec:
  selector:
    matchLabels:
      app: db
      app.kubernetes.io/name: mysql
  serviceName: mysql
  replicas: 1
  template:
    metadata:
      labels:
        app: db
        app.kubernetes.io/name: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:5.7
        env:
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mysql-secret
                key: MYSQL_ROOT_PASSWORD
                  # args: ["--default-authentication-plugin=mysql_native_password"]
        ports:
        - name: mysql
          containerPort: 3306
        volumeMounts:
        - name: data
          mountPath: /var/lib/mysql
        - name: config-map
          mountPath: /etc/mysql/conf.d
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
        livenessProbe:
          exec:
            command:
              - bash
              - "-c"
              - |
                set -ex
                mysqladmin -uroot -p$MYSQL_ROOT_PASSWORD ping &> /dev/null
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          exec:
          # Check we can execute queries over TCP (skip-networking is off).
            command:
              - bash
              - "-c"
              - |
                set -ex
                mysql -h 127.0.0.1 -uroot -p$MYSQL_ROOT_PASSWORD -e "SELECT 1" &> /dev/null
          initialDelaySeconds: 5
          periodSeconds: 2
          timeoutSeconds: 1
      volumes:
      - name: config-map
        configMap:
          name: mysql-configmap
  volumeClaimTemplates:
  - metadata:
      name: data
      namespace: db
    spec:
      storageClassName: "local-path"
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 2Gi
